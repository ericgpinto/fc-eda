version: "3"

services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:6.1.0"
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: Sao_Paulo/Brazil
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # Exposes 9092 for external connections to the broker
      # Use kafka:29092 for connections internal on the docker network
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "9092:9092"
    environment:
      TZ: Sao_Paulo/Brazil
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: "false"
    networks:
      - app-network
    volumes:
      - kafka_data:/var/lib/kafka/data

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:29092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - app-network
  db-wallet-core:
    image: mysql:8.0
    container_name: db-wallet-core
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - mysql_go_data:/var/lib/mysql

  db-wallet-balance:
    image: mysql:8.0
    container_name: db-wallet-balance
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: java_db
      MYSQL_PASSWORD: root
    ports:
      - "3308:3306"
    networks:
      - app-network
    volumes:
      - mysql_java_data:/var/lib/mysql

  fc-wallet-core:
    build:
      context: ./fc-wallet-core
      dockerfile: Dockerfile
    container_name: fc-wallet-core
    depends_on:
      - kafka
      - db-wallet-core
    environment:
      KAFKA_BROKER: kafka:9092
      DB_HOST: mysql-go
      DB_PORT: 3306
      DB_NAME: wallet
      DB_PASSWORD: root
    ports:
      - 8080:8080
    networks:
      - app-network
    volumes:
      - go_data:/app/data

  fc-wallet-balance:
    build:
      context: ./fc-wallet-balance
      dockerfile: Dockerfile
    container_name: fc-wallet-balance
    depends_on:
      - kafka
      - db-wallet-balance
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: mysql-javaservice
      DB_PORT: 3306
      DB_NAME: java_db
      DB_PASSWORD: root
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - app-network
    volumes:
      - java_data:/app/data
    ports:
      - 3003:3003

networks:
  app-network:
    driver: bridge

volumes:
  zookeeper_data:
  kafka_data:
  mysql_go_data:
  mysql_java_data:
  go_data:
  java_data:
